import { Component, OnInit } from '@angular/core';
import { FormGroup, FormControl, Validators } from '@angular/forms';
import { RehaService } from './rehabilitacion.service';

@Component({
  selector: 'app-rehabilitacion',
  templateUrl: './rehabilitacion.component.html',
  styleUrls: ['./rehabilitacion.component.css']
})
export class RehabilitacionComponent implements OnInit {
    form: FormGroup;
    examenpara = new FormControl();
    examenParaList: string[] = ['Trauma o desarmonia oclusal',
                                'Estado de organos dentarios pilares',
                                'Estado y relacion de arcos',
                                'Irregularidades en el plano oclusal',
                                'Cierre oclusal por varias causas',
                                'Sobre mordida vertical u horizontal',
                                'Mordida cruzada',
                                'Desviaci칩n de la linea media',
                                'Relaci칩n del tama침o y forma entre los arcos',
                                'Espacio para remplazar dientes faltantes',
                                'Posici칩n dentaria en el arco',
                                'Relaciones marginales',
                                'Desgaste cuspideo y fosetas',
                                'Abrasion en cervical',
                                'Diastemas',
                                'Supernumerarios e inclusiones',
                                'Relacion corona raiz',
                                'Estado de las restaurizaciones presentes',
                                'Logitud del arco',
                                'Desviaciones de la oclusion'
                                ];
  
    constructor(public rehaservice: RehaService) {}
  
    ngOnInit() {
      this.form = new FormGroup({
        referidoPor: new FormControl(null, {validators: [Validators.required, Validators.minLength(3)]}),
        motivoConsulta: new FormControl(null, { validators: [Validators.required] }),
        moEstu: new FormControl(null, { validators: [Validators.required] }),
        descripcion: new FormControl(null, { validators: [Validators.required] }),
        diagO: new FormControl(null, { validators: [Validators.required] }),
        exTem: new FormControl(null, { validators: [Validators.required] }),
        examenPara: new FormControl(null),
        otrasEx: new FormControl(null, { validators: [Validators.required] }),
        analisisRadio: new FormControl(null, { validators: [Validators.required] }),
        trataProte: new FormControl(null, { validators: [Validators.required] }),
        fijo11	: new FormControl(null, { validators: [Validators.required] }),
        fijo12	: new FormControl(null, { validators: [Validators.required] }),
        fijo13	: new FormControl(null, { validators: [Validators.required] }),
        fijo14	: new FormControl(null, { validators: [Validators.required] }),
        fijo15	: new FormControl(null, { validators: [Validators.required] }),
        fijo16	: new FormControl(null, { validators: [Validators.required] }),
        fijo17	: new FormControl(null, { validators: [Validators.required] }),
        fijo18	: new FormControl(null, { validators: [Validators.required] }),
        fijo21	: new FormControl(null, { validators: [Validators.required] }),
        fijo22	: new FormControl(null, { validators: [Validators.required] }),
        fijo23	: new FormControl(null, { validators: [Validators.required] }),
        fijo24	: new FormControl(null, { validators: [Validators.required] }),
        fijo25	: new FormControl(null, { validators: [Validators.required] }),
        fijo26	: new FormControl(null, { validators: [Validators.required] }),
        fijo27	: new FormControl(null, { validators: [Validators.required] }),
        fijo28	: new FormControl(null, { validators: [Validators.required] }),
        fijo41	: new FormControl(null, { validators: [Validators.required] }),
        fijo42	: new FormControl(null, { validators: [Validators.required] }),
        fijo43	: new FormControl(null, { validators: [Validators.required] }),
        fijo44	: new FormControl(null, { validators: [Validators.required] }),
        fijo45	: new FormControl(null, { validators: [Validators.required] }),
        fijo46	: new FormControl(null, { validators: [Validators.required] }),
        fijo47	: new FormControl(null, { validators: [Validators.required] }),
        fijo48	: new FormControl(null, { validators: [Validators.required] }),
        fijo31	: new FormControl(null, { validators: [Validators.required] }),
        fijo32	: new FormControl(null, { validators: [Validators.required] }),
        fijo33	: new FormControl(null, { validators: [Validators.required] }),
        fijo34	: new FormControl(null, { validators: [Validators.required] }),
        fijo35	: new FormControl(null, { validators: [Validators.required] }),
        fijo36	: new FormControl(null, { validators: [Validators.required] }),
        fijo37	: new FormControl(null, { validators: [Validators.required] }),
        fijo38	: new FormControl(null, { validators: [Validators.required] }),
        remov11	: new FormControl(null, { validators: [Validators.required] }),
        remov12	: new FormControl(null, { validators: [Validators.required] }),
        remov13	: new FormControl(null, { validators: [Validators.required] }),
        remov14	: new FormControl(null, { validators: [Validators.required] }),
        remov15	: new FormControl(null, { validators: [Validators.required] }),
        remov16	: new FormControl(null, { validators: [Validators.required] }),
        remov17	: new FormControl(null, { validators: [Validators.required] }),
        remov18	: new FormControl(null, { validators: [Validators.required] }),
        remov21	: new FormControl(null, { validators: [Validators.required] }),
        remov22	: new FormControl(null, { validators: [Validators.required] }),
        remov23	: new FormControl(null, { validators: [Validators.required] }),
        remov24	: new FormControl(null, { validators: [Validators.required] }),
        remov25	: new FormControl(null, { validators: [Validators.required] }),
        remov26	: new FormControl(null, { validators: [Validators.required] }),
        remov27	: new FormControl(null, { validators: [Validators.required] }),
        remov28	: new FormControl(null, { validators: [Validators.required] }),
        remov41	: new FormControl(null, { validators: [Validators.required] }),
        remov42	: new FormControl(null, { validators: [Validators.required] }),
        remov43	: new FormControl(null, { validators: [Validators.required] }),
        remov44	: new FormControl(null, { validators: [Validators.required] }),
        remov45	: new FormControl(null, { validators: [Validators.required] }),
        remov46	: new FormControl(null, { validators: [Validators.required] }),
        remov47	: new FormControl(null, { validators: [Validators.required] }),
        remov48	: new FormControl(null, { validators: [Validators.required] }),
        remov31	: new FormControl(null, { validators: [Validators.required] }),
        remov32	: new FormControl(null, { validators: [Validators.required] }),
        remov33	: new FormControl(null, { validators: [Validators.required] }),
        remov34	: new FormControl(null, { validators: [Validators.required] }),
        remov35	: new FormControl(null, { validators: [Validators.required] }),
        remov36	: new FormControl(null, { validators: [Validators.required] }),
        remov37	: new FormControl(null, { validators: [Validators.required] }),
        remov38	: new FormControl(null, { validators: [Validators.required] }),

      });
    }
    addReha() {
      this.rehaservice.addReha(
        this.form.value.referidoPor,
        this.form.value.motivoConsulta,
        this.form.value.moEstu,
        this.form.value.descripcion,
        this.form.value.diagO,
        this.form.value.exTem,
        this.form.value.examenPara,
        this.form.value.otrasEx,
        this.form.value.analisisRadio,
        this.form.value.trataProte,
        this.form.value.fijo11,
this.form.value.fijo12,
this.form.value.fijo13,
this.form.value.fijo14,
this.form.value.fijo15,
this.form.value.fijo16,
this.form.value.fijo17,
this.form.value.fijo18,
this.form.value.fijo21,
this.form.value.fijo22,
this.form.value.fijo23,
this.form.value.fijo24,
this.form.value.fijo25,
this.form.value.fijo26,
this.form.value.fijo27,
this.form.value.fijo28,
this.form.value.fijo41,
this.form.value.fijo42,
this.form.value.fijo43,
this.form.value.fijo44,
this.form.value.fijo45,
this.form.value.fijo46,
this.form.value.fijo47,
this.form.value.fijo48,
this.form.value.fijo31,
this.form.value.fijo32,
this.form.value.fijo33,
this.form.value.fijo34,
this.form.value.fijo35,
this.form.value.fijo36,
this.form.value.fijo37,
this.form.value.fijo38,
this.form.value.remov11,
this.form.value.remov12,
this.form.value.remov13,
this.form.value.remov14,
this.form.value.remov15,
this.form.value.remov16,
this.form.value.remov17,
this.form.value.remov18,
this.form.value.remov21,
this.form.value.remov22,
this.form.value.remov23,
this.form.value.remov24,
this.form.value.remov25,
this.form.value.remov26,
this.form.value.remov27,
this.form.value.remov28,
this.form.value.remov41,
this.form.value.remov42,
this.form.value.remov43,
this.form.value.remov44,
this.form.value.remov45,
this.form.value.remov46,
this.form.value.remov47,
this.form.value.remov48,
this.form.value.remov31,
this.form.value.remov32,
this.form.value.remov33,
this.form.value.remov34,
this.form.value.remov35,
this.form.value.remov36,
this.form.value.remov37,
this.form.value.remov38,
      );
    }
  }